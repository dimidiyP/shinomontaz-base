#!/bin/bash

BACKUP_DIR="/opt/backups"
PROJECT_DIR="/opt/shinomontaz"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è backup
create_backup() {
    echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ backup..."
    
    mkdir -p $BACKUP_DIR
    
    BACKUP_NAME="manual_backup_$(date +%Y%m%d_%H%M%S)"
    
    # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã
    cd $PROJECT_DIR
    docker-compose down
    
    # –°–æ–∑–¥–∞—Ç—å backup
    tar -czf "$BACKUP_DIR/$BACKUP_NAME.tar.gz" \
        --exclude="node_modules" \
        --exclude=".git" \
        --exclude="*.log" \
        $PROJECT_DIR
    
    # –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã –æ–±—Ä–∞—Ç–Ω–æ
    docker-compose up -d
    
    echo "‚úÖ Backup —Å–æ–∑–¥–∞–Ω: $BACKUP_NAME.tar.gz"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ backup'–æ–≤
list_backups() {
    echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ backup'—ã:"
    if [ -d "$BACKUP_DIR" ]; then
        cd $BACKUP_DIR
        ls -lht backup_*.tar.gz manual_backup_*.tar.gz 2>/dev/null | head -10
    else
        echo "–ù–µ—Ç backup'–æ–≤"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫–∞—Ç–∞
rollback() {
    local backup_file="$1"
    
    if [ -z "$backup_file" ]; then
        echo "‚ùå –£–∫–∞–∂–∏—Ç–µ —Ñ–∞–π–ª backup –¥–ª—è –æ—Ç–∫–∞—Ç–∞"
        echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: $0 rollback <backup_file>"
        list_backups
        return 1
    fi
    
    if [ ! -f "$BACKUP_DIR/$backup_file" ]; then
        echo "‚ùå Backup —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $backup_file"
        list_backups
        return 1
    fi
    
    echo "üîÑ –û—Ç–∫–∞—Ç –∫ backup: $backup_file"
    read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? –≠—Ç–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç —Ç–µ–∫—É—â–∏–π —Å–∞–π—Ç. (y/N): " confirm
    
    if [[ $confirm =~ ^[Yy]$ ]]; then
        # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â–∏–µ —Å–µ—Ä–≤–∏—Å—ã
        cd $PROJECT_DIR
        docker-compose down
        
        # –°–æ–∑–¥–∞—Ç—å emergency backup —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        EMERGENCY_BACKUP="emergency_$(date +%Y%m%d_%H%M%S)"
        tar -czf "$BACKUP_DIR/$EMERGENCY_BACKUP.tar.gz" \
            --exclude="node_modules" \
            --exclude=".git" \
            --exclude="*.log" \
            $PROJECT_DIR
        echo "üì¶ Emergency backup —Å–æ–∑–¥–∞–Ω: $EMERGENCY_BACKUP.tar.gz"
        
        # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ backup
        cd /
        tar -xzf "$BACKUP_DIR/$backup_file"
        
        # –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã
        cd $PROJECT_DIR
        docker-compose up -d
        
        echo "‚úÖ –û—Ç–∫–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω"
        echo "üíæ Emergency backup —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫: $EMERGENCY_BACKUP.tar.gz"
    else
        echo "‚ùå –û—Ç–∫–∞—Ç –æ—Ç–º–µ–Ω–µ–Ω"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö backup'–æ–≤
cleanup_backups() {
    local keep_count=${1:-5}
    
    echo "üßπ –û—á–∏—Å—Ç–∫–∞ backup'–æ–≤ (–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ $keep_count)..."
    
    cd $BACKUP_DIR
    
    # –û—á–∏—Å—Ç–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ backup'—ã
    ls -t backup_*.tar.gz 2>/dev/null | tail -n +$((keep_count + 1)) | xargs -r rm
    
    # –û—á–∏—Å—Ç–∏—Ç—å manual backup'—ã (–æ—Å—Ç–∞–≤–ª—è–µ–º –±–æ–ª—å—à–µ)
    ls -t manual_backup_*.tar.gz 2>/dev/null | tail -n +$((keep_count * 2 + 1)) | xargs -r rm
    
    echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
check_status() {
    echo "üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã:"
    
    cd $PROJECT_DIR
    
    echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
    docker-compose ps
    
    echo -e "\n–ü–æ—Å–ª–µ–¥–Ω–∏–µ backup'—ã:"
    list_backups | head -5
    
    echo -e "\n–†–∞–∑–º–µ—Ä backup –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:"
    du -sh $BACKUP_DIR 2>/dev/null || echo "Backup –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞"
    
    echo -e "\n–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:"
    curl -I http://baseshinomontaz.ru/ 2>/dev/null | head -1 || echo "‚ùå –°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
case "$1" in
    "backup"|"create")
        create_backup
        ;;
    "list"|"ls")
        list_backups
        ;;
    "rollback"|"restore")
        rollback "$2"
        ;;
    "cleanup"|"clean")
        cleanup_backups "$2"
        ;;
    "status"|"check")
        check_status
        ;;
    *)
        echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ backup'–∞–º–∏ –∏ –æ—Ç–∫–∞—Ç–∞–º–∏"
        echo ""
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {backup|list|rollback|cleanup|status}"
        echo ""
        echo "  backup           - —Å–æ–∑–¥–∞—Ç—å backup –≤—Ä—É—á–Ω—É—é"
        echo "  list             - –ø–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ backup'—ã"
        echo "  rollback <file>  - –æ—Ç–∫–∞—Ç–∏—Ç—å—Å—è –∫ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É backup'—É"
        echo "  cleanup [count]  - –æ—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ backup'—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ—Å—Ç–∞–≤–∏—Ç—å 5)"
        echo "  status           - –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã"
        echo ""
        echo "–ü—Ä–∏–º–µ—Ä—ã:"
        echo "  $0 backup"
        echo "  $0 list"
        echo "  $0 rollback backup_20250703_180000.tar.gz"
        echo "  $0 cleanup 10"
        ;;
esac